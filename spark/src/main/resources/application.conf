generate-log-table = true
generate-log-table = ${?GENERATE_LOG_TABLE}

checkpoint-dir = "dbfs:/datastream-deltalake-connector/_checkpoint"
checkpoint-dir = ${?CHECKPOINT_DIR}

datastream {
  name = "datastream-deltalake-connector"
  name = ${?NAME}
  read-format = "avro"
  read-format = ${?READ_FORMAT}
  start-date = "1970-01-01T00:00:00.00Z"
  start-date = ${?START_DATE}
  file-read-concurrency = 2
  file-read-concurrency = ${?FILE_READ_CONCURRENCY}

  table-source {
    type = discovery-bucket
    type = ${?DATASTREAM_TABLE_SOURCE_TYPE}
    bucket = "required-if-discovery-bucket"
    bucket = ${?BUCKET}
    path = ${?SOURCE_PATH}
  }
}

deltalake {
  table-name-prefix = ${?DELTA_TABLE_NAME_PREFIX}
  table-name-prefix = ""
  merge-frequency = ${?DELTA_MERGE_FREQUENCY_MINUTES}
  merge-frequency = "1 minute"
  schema-evolution = ${?DELTA_SCHEMA_EVOLUTION_STRATEGY}
  schema-evolution = "mergeSchema"
  table-path = ${?DELTA_TABLE_PATH}
  table-path = "dbfs:/datastream-deltalake-connector/_delta"
  microbatch-partitions = ${?DELTA_MICROBATCH_PARTITIONS}
  database = ${?DELTA_DATABASE}

  compaction {
    auto-compaction-enabled = false
    auto-compaction-enabled = ${?DATABRICKS_DELTA_AUTO_COMPACTION_ENABLED}
    min-number-of-files = ${?DATABRICKS_DELTA_MIN_NUMBER_OF_FILES}
    max-file-size-bytes = ${?DATABRICKS_DELTA_MAX_FILE_SIZE_BYTES}
    target-file-size-bytes = ${?DATABRICKS_DELTA_TARGET_FILE_SIZE_BYTES}
  }

  optimize {
    auto-optimize-enabled = false
    auto-optimize-enabled = ${?DATABRICKS_DELTA_AUTO_OPTIMIZE_ENABLED}
  }
}